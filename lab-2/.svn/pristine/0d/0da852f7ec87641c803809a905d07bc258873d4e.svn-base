package cse530a.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import cse530a.model.Book;
import cse530a.model.ShoppingCart;
import cse530a.model.ShoppingCartItem;

public class ShoppingCartDao {
    public static ShoppingCart createCart(Connection conn, Long userId) {
        // FIXME
        return null;
    }
    
    public static void updateCart(Connection conn, ShoppingCart cart) {
        // FIXME
    }
    
    public static void deleteCart(Connection conn, ShoppingCart cart) {
        // FIXME        
    }
    
    private static final String RETRIEVE_SHOPPINGCART_WITHETEMS = " select cart_id, isbn, quantity from shopping_cart_items where cart_id = ?";
    
    
    public static ShoppingCart retrieveCart(Connection conn, Long userId) throws SQLException{
    	ArrayList<ShoppingCartItem> shoppingCartItemsList = new ArrayList<ShoppingCartItem>();
    	ShoppingCart shoppingCart = new ShoppingCart();
    	
        PreparedStatement stmt = null;
        ResultSet rs = null;
        
        try {
            stmt = conn.prepareStatement(RETRIEVE_SHOPPINGCART_WITHETEMS);
            stmt.setLong(1, userId);
            rs = stmt.executeQuery();
            
            while (rs.next()) {
				ShoppingCartItem shoppingCartItem = new ShoppingCartItem();
				// set the attribute of shopping cart items 
				shoppingCartItem.setCartId(rs.getLong(1));
				shoppingCartItem.setIsbn(rs.getString(2));
				shoppingCartItem.setQuantity(rs.getInt(3));
				// set the attribute of books of the shopping cart items
				Book book = BookDao.retrieveBook(conn, shoppingCartItem.getIsbn());
				shoppingCartItem.setBook(book);
				// Add shoppingCartItem to an ArrayList
				shoppingCartItemsList.add(shoppingCartItem);
            }
            // set the items found to the shopping cart
            shoppingCart.setItems(shoppingCartItemsList); 
        } catch (SQLException e) {
            throw e;
        } finally {
            DatabaseManager.closeResultSet(rs);
            DatabaseManager.closeStatement(stmt);
        }
        
        return shoppingCart;
    }
    
}
